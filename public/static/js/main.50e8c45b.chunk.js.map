{"version":3,"sources":["api/webSocket.js","config/app.config.js","util/util.js","components/CityAqiSparklines/CityAqiSparklines.jsx","components/CityAqiTable/CityAqiTable.jsx","components/AqiGuide/AqiGuide.jsx","components/ChartPanel/ChartPanel.jsx","components/Header/Header.jsx","components/Layout/Layout.jsx","components/CityAqiCompare/CityAqiCompare.jsx","pages/HomePage/HomePage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["webSocket","CAT_COLOR","APP","TITLE","SOCKET_SERVER_URL","CATEGORIES","name","startRange","endRange","color","DEFAULT_CATEGORY","initiateSocket","WebSocket","TimeAgo","addLocale","en","getCategory","qualityIndex","aqi","round","cat","filter","category","timeAgo","CityAqiSparklines","prop","data","width","style","fillOpacity","fill","useStyles","makeStyles","table","minWidth","minHeight","activeRow","background","CityAqiTable","prob","classes","selectCity","chartData","clickedCity","TableContainer","component","Paper","Table","size","className","TableHead","TableRow","TableCell","align","TableBody","arr","currTime","Date","map","item","timeDiff","time","city","onClick","scope","format","rows","tableCell","fontSize","padding","AqiGuide","IconButton","display","float","guageChartColors","ChartsPanel","selectedCity","Grid","container","spacing","xs","sm","aria-label","Typography","variant","id","animate","nrOfLevels","colors","percent","needleColor","textColor","formatTextValue","value","Select","native","onChange","event","target","Header","AppBar","position","Toolbar","body","margin","Layout","children","CityAqiCompare","categoriesStack","forEach","aqiData","dataItem","CustomTooltip","payload","label","active","backgroundColor","toFixed","CustomBar","props","x","y","height","ResponsiveContainer","BarChart","layout","XAxis","dataKey","stroke","YAxis","tickCount","max","Tooltip","content","Bar","stackId","shape","barCategoryGap","barGap","ReferenceLine","strokeWidth","strokeDasharray","DEFAULT_DATA","HomePage","useState","setData","setSelectedCity","setClickedCity","setChartData","useEffect","cb","error","response","newData","uniqData","sortBy","uniqBy","temp","tempChartData","hasOwnProperty","length","shift","onmessage","JSON","parse","md","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e8c45b.chunk.js","sourcesContent":["import { APP } from '../config/app.config';\r\nlet webSocket;\r\n\r\nexport const initiateSocket = () => {\r\n    webSocket = new WebSocket(APP.SOCKET_SERVER_URL);\r\n};\r\n\r\nexport const subscribe = (cb) => {\r\n    if (!webSocket) {\r\n        initiateSocket();\r\n    }\r\n\r\n    webSocket.onmessage = (event) => {\r\n        return cb(null, JSON.parse(event.data));\r\n    };\r\n};","\r\nexport const CAT_COLOR = {\r\n    GOOD: '#55a84f',\r\n    SATISFACTORY: '#a3c853',\r\n    MODERATE: '#fff833',\r\n    POOR: '#f29c33',\r\n    VERY_POOR: '#e93f33',\r\n    SEVERE: '#af2d24',\r\n    DEFAULT: '#aaaaaa'\r\n}\r\n\r\n\r\nexport const APP = {\r\n    TITLE: 'Proximity Lab AQI',\r\n    SOCKET_SERVER_URL: 'wss://city-ws.herokuapp.com',\r\n    CATEGORIES: [\r\n        { name: 'GOOD', startRange: 0, endRange: 50, color: CAT_COLOR.GOOD },\r\n        { name: 'SATISFACTORY', startRange: 51, endRange: 100, color: CAT_COLOR.SATISFACTORY },\r\n        { name: 'MODERATE', startRange: 101, endRange: 200, color: CAT_COLOR.MODERATE },\r\n        { name: 'POOR', startRange: 201, endRange: 300, color: CAT_COLOR.POOR },\r\n        { name: 'VERY POOR', startRange: 301, endRange: 400, color: CAT_COLOR.VERY_POOR },\r\n        { name: 'SEVERE', startRange: 401, endRange: 500, color: CAT_COLOR.SEVERE }\r\n    ],\r\n    DEFAULT_CATEGORY: { name: 'DEFAULT', color: CAT_COLOR.DEFAULT }\r\n};","\r\nimport { round } from 'lodash'\r\nimport { APP } from '../config/app.config';\r\nimport TimeAgo from 'javascript-time-ago'\r\nimport en from 'javascript-time-ago/locale/en'\r\n\r\n\r\nTimeAgo.addLocale(en)\r\n\r\nexport const getCategory = (qualityIndex) => {\r\n    const aqi = round(qualityIndex)\r\n    let cat = APP.CATEGORIES.filter((category) => (aqi >= category.startRange && aqi <= category.endRange))\r\n    return cat ? cat[0] : APP.DEFAULT_CATEGORY\r\n}\r\n\r\n\r\nexport const timeAgo = new TimeAgo('en-US')","\r\nimport React from 'react';\r\nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\r\n\r\nconst CityAqiSparklines = (prop) => {\r\n    const { data, color } = prop\r\n    return (\r\n        <Sparklines data={data} width={800}>\r\n            <SparklinesLine color={color} style={{ fillOpacity: '0.5' }} />\r\n            <SparklinesSpots style={{ fill: color }} />\r\n        </Sparklines>\r\n    );\r\n};\r\n\r\nexport default CityAqiSparklines;\r\n\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { round } from 'lodash'\r\nimport { getCategory, timeAgo } from '../../util/util'\r\nimport CityAqiSparklines from '../CityAqiSparklines/CityAqiSparklines'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 100,\r\n        minHeight: 400,\r\n    },\r\n    activeRow: {\r\n        background: '#ccc'\r\n    }\r\n});\r\n\r\n\r\nconst CityAqiTable = (prob) => {\r\n    const classes = useStyles();\r\n    const { selectCity, data, chartData, clickedCity } = prob\r\n\r\n    const rows = (arr) => {\r\n        const currTime = new Date();\r\n        return arr &&\r\n            arr.map((item) => {\r\n                const timeDiff = currTime - new Date(item.time)\r\n                const { color } = getCategory(item.aqi)\r\n                return (\r\n                    <TableRow key={item.city} className={item.city === clickedCity ? classes.activeRow : ''} onClick={() => selectCity(item.city)}>\r\n                        <TableCell component='th' scope='row'>\r\n                            {item.city}\r\n                        </TableCell>\r\n                        <TableCell align='right'><span style={{ color: color }}>{round(item.aqi, 2)} </span></TableCell>\r\n                        <TableCell align='right'>{item.aqi ? timeAgo.format(currTime - timeDiff) : 'Fetching'} </TableCell>\r\n                        <TableCell width='100'>\r\n                            <CityAqiSparklines data={chartData[item.city]} color={color} />\r\n                        </TableCell>\r\n                    </TableRow >\r\n                )\r\n            }\r\n            );\r\n    }\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table size='small' className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>City</TableCell>\r\n                        <TableCell align='right'>Current AQI</TableCell>\r\n                        <TableCell align='right'>Last Updated</TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows(data)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default CityAqiTable;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { APP, CAT_COLOR } from '../../config/app.config'\r\nimport { getCategory } from '../../util/util'\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        width: '100%',\r\n    },\r\n    tableCell: {\r\n        fontSize: '10px',\r\n        padding: '3px 12px 3px 8px'\r\n    }\r\n});\r\n\r\nconst AqiGuide = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer>\r\n            <Table size='small' className={classes.table}>\r\n                <TableHead style={{ background: CAT_COLOR.DEFAULT }}>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tableCell}>Air Quality Index</TableCell>\r\n                        <TableCell className={classes.tableCell}>Category</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {APP.CATEGORIES.map((category) => {\r\n                        const { color } = getCategory(category.startRange);\r\n                        return (\r\n                            <TableRow key={category.name} style={{ background: color }}>\r\n                                <TableCell className={classes.tableCell}>\r\n                                    {category.startRange} - {category.endRange}\r\n                                </TableCell>\r\n                                <TableCell className={classes.tableCell}>{category.name}</TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default AqiGuide;","import React from 'react';\r\nimport GaugeChart from 'react-gauge-chart'\r\nimport { getCategory } from '../../util/util'\r\nimport CityAqiSparklines from '../CityAqiSparklines/CityAqiSparklines'\r\nimport AqiGuid from '../AqiGuide/AqiGuide'\r\nimport { CAT_COLOR } from '../../config/app.config'\r\nimport { round } from 'lodash'\r\nimport { Grid, Select, Typography, Paper, IconButton } from '@material-ui/core'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    IconButton: {\r\n        display: 'inline-block',\r\n        float: 'right'\r\n    }\r\n});\r\n\r\nconst guageChartColors = [CAT_COLOR.GOOD, CAT_COLOR.SATISFACTORY, CAT_COLOR.MODERATE, CAT_COLOR.MODERATE, CAT_COLOR.POOR, CAT_COLOR.POOR, CAT_COLOR.VERY_POOR, CAT_COLOR.VERY_POOR, CAT_COLOR.SEVERE, CAT_COLOR.SEVERE]\r\n\r\nconst ChartsPanel = (prop) => {\r\n    const classes = useStyles();\r\n    const { selectedCity, chartData, data, selectCity } = prop\r\n    const { aqi, city } = selectedCity\r\n    const { name, color } = getCategory(aqi)\r\n    const handleChange = (event) => {\r\n        selectCity(event.target.value)\r\n    };\r\n\r\n    return (<Grid container spacing={1}>\r\n        <Grid item xs={12} sm={8}>\r\n            <IconButton aria-label='delete' className={classes.IconButton}>\r\n                <CancelIcon onClick={() => { selectCity('') }} />\r\n            </IconButton>\r\n            <Typography variant='h6' align='center' >\r\n                {selectedCity.city}\r\n            </Typography>\r\n            <GaugeChart id='gauge-chart'\r\n                animate={true}\r\n                nrOfLevels={10}\r\n                colors={guageChartColors}\r\n                percent={aqi / 500}\r\n                needleColor={color}\r\n                textColor={color}\r\n                formatTextValue={(value) => round(aqi)\r\n                }\r\n            />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n            <Typography variant='h6' align='center' >\r\n                Select City &nbsp;\r\n                <Select native\r\n                    value={selectedCity.city}\r\n                    onChange={handleChange}\r\n                    variant={'outlined'} >\r\n                    <option value=''>Compare all cities</option>)\r\n                    {data.map((item) => <option key={item.city} value={item.city}>{item.city}</option>)}\r\n                </Select>\r\n            </Typography>\r\n            <br />\r\n            <Paper>\r\n                <Typography variant='h6' align='center' >\r\n                    Air Quality Index is <br /><strong style={{ color: color }}>{name}</strong>\r\n                </Typography>\r\n                <Typography align='center' >\r\n                    As per Air Quality Standerds\r\n            </Typography>\r\n                <AqiGuid />\r\n            </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <CityAqiSparklines data={chartData[city]} color={color} />\r\n        </Grid>\r\n    </Grid>)\r\n}\r\n\r\nexport default ChartsPanel;","import React from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport { APP } from '../../config/app.config';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <AppBar position='static'>\r\n            <Toolbar variant='dense'>\r\n                <Typography variant='h6'>\r\n                    {APP.TITLE}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;","import Header from '../Header/Header';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    body: {\r\n        width: '95%',\r\n        margin: '15px auto'\r\n    }\r\n});\r\nconst Layout = ({ children }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        < >\r\n            <Header />\r\n            <div className={classes.body}>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, ReferenceLine, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { APP, CAT_COLOR } from '../../config/app.config';\r\nimport { getCategory } from '../../util/util';\r\nimport AqiGuid from '../AqiGuide/AqiGuide';\r\n\r\nconst CityAqiCompare = (prop) => {\r\n    const { data, selectCity } = prop\r\n    let categoriesStack = {}\r\n    APP.CATEGORIES.forEach((category) => {\r\n        categoriesStack[category.name] = category.endRange - category.startRange + 1\r\n    })\r\n    let aqiData = data.map((dataItem) => {\r\n        return dataItem\r\n    })\r\n    categoriesStack = { ...categoriesStack, city: 'AQ Index' }\r\n    const chartData = [categoriesStack, ...aqiData]\r\n\r\n    const CustomTooltip = ({ payload, label, active }) => {\r\n        if (payload[0]?.value) {\r\n            const { color, name } = getCategory(payload[0].value)\r\n            if (active && label !== 'AQ Index') {\r\n                return (\r\n                    <div className='custom-tooltip' style={{ backgroundColor: color }}>\r\n                        <h5>{name}</h5>\r\n                        <div className='city'>{label}</div>\r\n                        <div className='aqi'>{`Aqi : ${payload[0].value.toFixed(2)}`}</div>\r\n                    </div>\r\n                );\r\n            } else if (label === 'AQ Index') {\r\n                return <AqiGuid />\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const CustomBar = (props) => {\r\n        const {\r\n            x, y, width, height, aqi\r\n        } = props;\r\n        if (aqi)\r\n            return <rect x={x} y={y} width={width} height={height} style={{ fill: getCategory(aqi).color }} />;\r\n        return null\r\n    };\r\n\r\n    const getReferanceLine = () => (\r\n        APP.CATEGORIES.map((category) => {\r\n            return <ReferenceLine key={category.name} y={category.endRange} label={category.name} stroke={category.color} strokeDasharray='3 3' />\r\n        })\r\n    )\r\n\r\n    return (\r\n        <ResponsiveContainer width='100%' height='100%'>\r\n            <BarChart\r\n                width={500}\r\n                height={300}\r\n                data={chartData}\r\n                layout='horizontal'\r\n            >\r\n                <XAxis dataKey='city' stroke='#999' />\r\n                <YAxis tickCount={25} stroke='#999' max={500} />\r\n                <Tooltip content={<CustomTooltip />} />\r\n                <Bar dataKey='GOOD' fill={CAT_COLOR.GOOD} stackId='a' />\r\n                <Bar dataKey='SATISFACTORY' fill={CAT_COLOR.SATISFACTORY} stackId='a' />\r\n                <Bar dataKey='MODERATE' fill={CAT_COLOR.MODERATE} stackId='a' />\r\n                <Bar dataKey='POOR' fill={CAT_COLOR.POOR} stackId='a' />\r\n                <Bar dataKey='VERY POOR' fill={CAT_COLOR.VERY_POOR} stackId='a' />\r\n                <Bar dataKey='SEVERE' fill={CAT_COLOR.SEVERE} stackId='a' />\r\n                <Bar dataKey='aqi' fill='#fff' shape={<CustomBar />} barCategoryGap={5} barGap={5} onClick={(item) => selectCity(item.city)} />\r\n                <ReferenceLine x={'AQ Index'} stroke={'#999999'} strokeWidth={2} />\r\n                {getReferanceLine()}\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default CityAqiCompare;","import React, { useState, useEffect } from 'react';\r\nimport { uniqBy, sortBy } from 'lodash'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { initiateSocket, subscribe } from './../../api/webSocket';\r\nimport CityAqiTable from '../../components/CityAqiTable/CityAqiTable';\r\nimport ChartsPanel from '../../components/ChartPanel/ChartPanel'\r\nimport Layout from '../../components/Layout/Layout'\r\nimport CityAqiCompare from '../../components/CityAqiCompare/CityAqiCompare'\r\n\r\nconst DEFAULT_DATA = [{ 'city': 'Pune', 'aqi': 0, time: 0 }]\r\nconst HomePage = () => {\r\n    const [data, setData] = useState(DEFAULT_DATA);\r\n    const [selectedCity, setSelectedCity] = useState({})\r\n    const [clickedCity, setClickedCity] = useState('')\r\n    const [chartData, setChartData] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        initiateSocket();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        subscribe((error, response) => {\r\n            if (error) return;\r\n            let newData = response.map((item) => ({ ...item, time: new Date() }\r\n            ))\r\n            var uniqData = sortBy(uniqBy([...newData, ...data], 'city'), 'city')\r\n            const temp = uniqData.filter((item) => (item.city === clickedCity))\r\n            let tempChartData = {}\r\n            uniqData.forEach((item) => {\r\n                if (chartData.hasOwnProperty(item.city)) {\r\n                    let arr = [...chartData[item.city], item.aqi]\r\n                    if (chartData[item.city].length > 20) {\r\n                        arr.shift()\r\n                    }\r\n                    tempChartData[item.city] = arr\r\n                } else {\r\n                    tempChartData[item.city] = []\r\n                }\r\n            })\r\n            setChartData(tempChartData)\r\n            setSelectedCity(temp[0])\r\n            setData(uniqData);\r\n        });\r\n    }, [data, clickedCity, chartData]);\r\n\r\n\r\n    const selectCity = city => {\r\n        setClickedCity(city)\r\n        const temp = data.filter((item) => (item.city === city\r\n        ))\r\n        setSelectedCity(temp[0])\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={5}>\r\n                    <Typography variant='h6' align='center' >\r\n                        Live AQI table\r\n                    </Typography>\r\n                    <CityAqiTable selectCity={selectCity} data={data} chartData={chartData} clickedCity={clickedCity} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={7}>\r\n                    {selectedCity?.aqi ? <ChartsPanel selectedCity={selectedCity} selectCity={selectCity} data={data} chartData={chartData} /> :\r\n                        <CityAqiCompare selectCity={selectCity} data={data} />}\r\n                </Grid>\r\n            </Grid >\r\n        </Layout>\r\n    );\r\n};\r\nexport default HomePage;\r\n\r\n","import './App.css';\nimport HomePage from './pages/HomePage/HomePage'\n\nfunction App() {\n  return (\n    <HomePage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}